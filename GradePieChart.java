
package UMS;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

import javax.swing.*;
import java.awt.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author dixon
 */
public class GradePieChart extends javax.swing.JFrame {

    /**
     * Creates new form GradePieChart
     */
    public GradePieChart() {
        initComponents();
        BtnExist.setBackground(Color.red);
        
       setTitle("Grade Distribution Chart");
        setSize(800, 600);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        // Ensure JFrame uses BorderLayout to properly add JPanel
        setLayout(new BorderLayout());

        // Create and add the pie chart panel
        JPanel chartPanel = createChartPanel();
        getContentPane().add(chartPanel, BorderLayout.CENTER);

        // Force UI refresh
        revalidate();
        repaint();
    }

    // Method to fetch grade distribution and create a pie chart
    private JPanel createChartPanel() {
        DefaultPieDataset dataset = getGradeDistribution();

        // If there's no data, show a message
        if (dataset.getItemCount() == 0) {
            JOptionPane.showMessageDialog(this, "No grade data found!");
            return new JPanel(); // Return empty panel if no data
        }

        JFreeChart pieChart = ChartFactory.createPieChart(
                "Grade Distribution",
                dataset,
                true, true, false
        );

        return new ChartPanel(pieChart);
    }

    // Fetch grade distribution from the database and categorize into bands
    private DefaultPieDataset getGradeDistribution() {
        DefaultPieDataset dataset = new DefaultPieDataset();
        String query = "SELECT (unit1 + unit2 + unit3) / 3 AS avg_grade FROM enrollment";

        int aCount = 0, bCount = 0, cCount = 0, dCount = 0, fCount = 0;

        try (Connection con = DBconnection.connect();
             PreparedStatement ps = con.prepareStatement(query);
             ResultSet rs = ps.executeQuery()) {

            while (rs.next()) {
                double avgGrade = rs.getDouble("avg_grade");

                if (avgGrade >= 80) aCount++;
                else if (avgGrade >= 70) bCount++;
                else if (avgGrade >= 60) cCount++;
                else if (avgGrade >= 50) dCount++;
                else fCount++;
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Database Error: " + ex.getMessage());
        }

        // Add data to the pie chart if there are grades
        if (aCount + bCount + cCount + dCount + fCount > 0) {
            dataset.setValue("A (80-100)", aCount);
            dataset.setValue("B (70-79)", bCount);
            dataset.setValue("C (60-69)", cCount);
            dataset.setValue("D (50-59)", dCount);
            dataset.setValue("F (0-49)", fCount);
        }

        return dataset;
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnExist = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BtnExist.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnExist.setText("x");
        BtnExist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(639, Short.MAX_VALUE)
                .addComponent(BtnExist)
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnExist)
                .addContainerGap(452, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnExistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExistActionPerformed
       this.dispose();
    }//GEN-LAST:event_BtnExistActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GradePieChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GradePieChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GradePieChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GradePieChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GradePieChart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnExist;
    // End of variables declaration//GEN-END:variables
}
